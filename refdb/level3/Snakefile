#
# Copyright (c) 2016 Hyeshik Chang
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
# - Hyeshik Chang <hyeshik@snu.ac.kr>
#

from collections import defaultdict
import os

shell.executable('bash')

GENOMES = '''
    GRCh38 GRCm38 GRCz10
'''.split()

LEVEL2_REFDB = '../level2/'
TARGETS = defaultdict(list)

def final_target(filename, genomes=None):
    for genome in GENOMES if genomes is None else genomes:
        TARGETS[genome].append(filename.format(genome=genome))
    return filename

rule default:
    run:
        print("Please specify name(s) of the genomes to build.")
        print("Supported genomes:", ' '.join(GENOMES))

rule make_exon_gtf:
    input: LEVEL2_REFDB + '{genome}/genes-main.gtf.gz'
    output: final_target('{genome}/exons.gtf.gz')
    shell: 'zcat {input} | awk -F\'\t\' \'/^#/; $3 == "exon"\' | \
            gzip -c - > {output}'

# ===

def donothing(*a, **k): pass
for genome, targets in TARGETS.items():
    shortcut = workflow.get_rule(workflow.add_rule(name=genome))
    shortcut.set_input(targets)
    shortcut.run_func = donothing

# ex: syntax=snakemake
